{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","children","style","overflowY","border","height","ErrorBoundry","props","state","hasError","this","setState","Component","App","useState","setRobots","searchfield","setSearchfield","useEffect","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6MAiBeA,EAfF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,sBAAKC,UAAU,sDAAf,UACE,qBACEC,IAAI,SACJC,IAAG,+BAA0BL,EAA1B,cAEL,gCACE,6BAAKC,IACL,4BAAIC,WCSGI,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BACGA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CAEEV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZK,EAAOG,GAAGV,UCMZW,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKT,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCOHI,EAdA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,qBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAJZ,SAOGJ,K,4BCaQK,E,kDArBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAU,GAHK,E,gEAQjBC,KAAKC,SAAS,CAAEF,UAAU,M,+BAGlB,IACAR,EAAaS,KAAKH,MAAlBN,SAER,OADqBS,KAAKF,MAAlBC,SAEC,wDAEFR,M,GAlBgBW,aC4CZC,G,MAvCH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACTvB,EADS,KACDwB,EADC,OAEsBD,mBACpC,IAHc,mBAETE,EAFS,KAEIC,EAFJ,KAKhBC,qBAAU,WACRC,MACE,8CAECC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAWR,EAAUQ,QAC5B,IAEH,IAIMC,EAAiBjC,EAAOkC,QAAO,SAACC,GACpC,OAAOA,EAAMzC,KACV0C,cACAC,SAASZ,EAAYW,kBAE1B,OAAQpC,EAAOsC,OAKb,sBAAK1C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAhBQ,SAACkC,GACtBb,EAAea,EAAMC,OAAOC,UAgB1B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzC,OAAQiC,WATxB,qBAAKrC,UAAU,KAAf,SACE,oBAAIA,UAAU,KAAd,yBCRS8C,EAvBS,SAACC,GAErBA,GACAA,aAAuBC,UAEvB,6BAAqBf,MACnB,YAMO,IALLgB,EAKI,EALJA,OACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,OACAC,EACI,EADJA,QAEAJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCVhBO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.1dc996ab.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ id, name, email }) => {\n  return (\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img\n        alt=\"robots\"\n        src={`https://robohash.org/${id}?200x200`}\n      />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return (\n          <Card\n            key={robots[i].id}\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"Search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Scroll = ({ children }) => {\n  return (\n    <div\n      style={{\n        overflowY: 'scroll',\n        border: '5px solid black',\n        height: '800px',\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    const { children } = this.props;\n    const { hasError } = this.state;\n    if (hasError) {\n      return <h1>Ooops. That is no good</h1>;\n    }\n    return children;\n  }\n}\n\nexport default ErrorBoundry;\n","import React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList';\nimport Searchbox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\nconst App = () => {\n  const [robots, setRobots] = useState([]);\n  const [searchfield, setSearchfield] = useState(\n    ''\n  );\n  useEffect(() => {\n    fetch(\n      'https://jsonplaceholder.typicode.com/users'\n    )\n      .then((response) => response.json())\n      .then((users) => setRobots(users));\n  }, []);\n\n  const onChangeSearch = (event) => {\n    setSearchfield(event.target.value);\n  };\n\n  const filteredRobots = robots.filter((robot) => {\n    return robot.name\n      .toLowerCase()\n      .includes(searchfield.toLowerCase());\n  });\n  return !robots.length ? (\n    <div className=\"tc\">\n      <h1 className=\"f1\">Loading</h1>\n    </div>\n  ) : (\n    <div className=\"tc\">\n      <h1 className=\"f1\">RoboFriends</h1>\n      <Searchbox searchChange={onChangeSearch} />\n      <Scroll>\n        <ErrorBoundry>\n          <CardList robots={filteredRobots} />\n        </ErrorBoundry>\n      </Scroll>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (\n    onPerfEntry &&\n    onPerfEntry instanceof Function\n  ) {\n    import('web-vitals').then(\n      ({\n        getCLS,\n        getFID,\n        getFCP,\n        getLCP,\n        getTTFB,\n      }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      }\n    );\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}